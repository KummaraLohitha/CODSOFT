import tkinter as tk
from tkinter import ttk
import random
import string

def generate_password(length, use_uppercase, use_digits, use_special_chars):
    characters = string.ascii_letters if use_uppercase else string.ascii_lowercase
    characters += string.digits if use_digits else ''
    characters += string.punctuation if use_special_chars else ''

    if not characters:
        return "Please select at least one character type."

    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def generate_button_clicked():
    try:
        length = int(length_entry.get())
        use_uppercase = uppercase_var.get()
        use_digits = digits_var.get()
        use_special_chars = special_chars_var.get()

        password = generate_password(length, use_uppercase, use_digits, use_special_chars)
        password_label.config(text=f"Generated Password: {password}")
    except ValueError:
        password_label.config(text="Invalid input. Please enter a valid positive integer for password length.")

# Create main window
root = tk.Tk()
root.title("Password Generator")

# Create and place widgets
length_label = ttk.Label(root, text="Enter password length:")
length_label.grid(row=0, column=0, padx=10, pady=10)

length_entry = ttk.Entry(root)
length_entry.grid(row=0, column=1, padx=10, pady=10)

uppercase_var = tk.BooleanVar()
uppercase_checkbox = ttk.Checkbutton(root, text="Include Uppercase", variable=uppercase_var)
uppercase_checkbox.grid(row=1, column=0, columnspan=2, padx=10, pady=5, sticky="w")

digits_var = tk.BooleanVar()
digits_checkbox = ttk.Checkbutton(root, text="Include Digits", variable=digits_var)
digits_checkbox.grid(row=2, column=0, columnspan=2, padx=10, pady=5, sticky="w")

special_chars_var = tk.BooleanVar()
special_chars_checkbox = ttk.Checkbutton(root, text="Include Special Characters", variable=special_chars_var)
special_chars_checkbox.grid(row=3, column=0, columnspan=2, padx=10, pady=5, sticky="w")

generate_button = ttk.Button(root, text="Generate Password", command=generate_button_clicked)
generate_button.grid(row=4, column=0, columnspan=2, pady=10)

password_label = ttk.Label(root, text="")
password_label.grid(row=5, column=0, columnspan=2, padx=10, pady=10)

# Run the GUI application
root.mainloop()
